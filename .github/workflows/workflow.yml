name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test || echo "No tests yet" # since it is a Simple node js application. production grade requires installation of packages like jest for testing

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # secrets added to github secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest .

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
          format: 'table'
          exit-code: '1'        # fail if HIGH/CRITICAL vulnerabiliies are found
          ignore-unfixed: true

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest\

deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}   # to be added to github secrets
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
            docker stop node-app || true
            docker rm node-app || true
            docker run -d -p 80:3000 --name node-app ${{ secrets.DOCKERHUB_USERNAME }}/node-app:latest
